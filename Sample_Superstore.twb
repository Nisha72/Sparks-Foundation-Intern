<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0712.0907                               -->
<workbook source-build='2021.2.1 (20212.21.0712.0907)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sales Report' inline='true' name='federated.1i0q9j906325021e6fd8u19ekc4g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SampleSuperstore (1)' name='textscan.0lvzzkg0nm6nft1eeeazm031b3jg'>
            <connection class='textscan' directory='C:/Users/Meghraj/Desktop' filename='SampleSuperstore (1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0lvzzkg0nm6nft1eeeazm031b3jg' name='SampleSuperstore (1).csv' table='[SampleSuperstore (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0lvzzkg0nm6nft1eeeazm031b3jg' name='SampleSuperstore (1).csv' table='[SampleSuperstore (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Ship Mode' ordinal='0' />
            <column datatype='string' name='Segment' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='integer' name='Postal Code' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='Category' ordinal='7' />
            <column datatype='string' name='Sub-Category' ordinal='8' />
            <column datatype='real' name='Sales' ordinal='9' />
            <column datatype='integer' name='Quantity' ordinal='10' />
            <column datatype='real' name='Discount' ordinal='11' />
            <column datatype='real' name='Profit' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[SampleSuperstore (1).csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales Rank' datatype='integer' name='[Calculation_723672171185471488]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='SampleSuperstore (1).csv' datatype='table' name='[__tableau_internal_object_id__].[SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02]' role='measure' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Profit]' derivation='Sum' name='[pcdf:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[rank:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[pcdf:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[rank:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#376491'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#9f3632'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4d4d4d'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#8cdcda'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#b1d877'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#f16a70'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='SampleSuperstore (1).csv' id='SampleSuperstore (1).csv_32FBC63FE95F41D1B41C41549C9E2D02'>
            <properties context=''>
              <relation connection='textscan.0lvzzkg0nm6nft1eeeazm031b3jg' name='SampleSuperstore (1).csv' table='[SampleSuperstore (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Ship Mode' ordinal='0' />
                  <column datatype='string' name='Segment' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='integer' name='Postal Code' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='Category' ordinal='7' />
                  <column datatype='string' name='Sub-Category' ordinal='8' />
                  <column datatype='real' name='Sales' ordinal='9' />
                  <column datatype='integer' name='Quantity' ordinal='10' />
                  <column datatype='real' name='Discount' ordinal='11' />
                  <column datatype='real' name='Profit' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Based on sub-category sales in diffrent region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Based on the sub-category  sales in diffrent regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' direction='DESC' using='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]</rows>
        <cols>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{60597D37-B9E3-4345-B021-17FC39C20C94}' />
    </worksheet>
    <worksheet name='Category Based Profit in a region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Category Based sales in a region
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]' direction='DESC' using='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]' />
          <computed-sort column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' direction='DESC' using='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]' />
              <lod column='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]' />
              <lod column='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]' />
              <lod column='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk] + [federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk])</rows>
        <cols>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{B6683030-5F6E-44F3-B14F-015D3D096563}' />
    </worksheet>
    <worksheet name='Funiture loss in central region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit &amp; Sales on Furniture Category in diffrent regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          </filter>
          <computed-sort column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' direction='DESC' using='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' />
          <slices>
            <column>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]</column>
            <column>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]</column>
            <column>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk] + [federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk])</rows>
        <cols>([federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk] / [federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk])</cols>
      </table>
      <simple-id uuid='{6AB316C5-0EC2-4090-BEEA-4B2655F70654}' />
    </worksheet>
    <worksheet name='Profit made in regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit &amp; Sales made in regions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' direction='DESC' using='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]' />
          <slices>
            <column>[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1i0q9j906325021e6fd8u19ekc4g].[Multiple Values]' value='76' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]' value='Profit &amp; Sales Based on region'>
              <formatted-text>
                <run>Profit &amp; Sales Based on region</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i0q9j906325021e6fd8u19ekc4g].[Multiple Values]</rows>
        <cols>([federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk] / [federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{CEDE4C67-EE61-4B41-A83B-DBAB6BD7C97F}' />
    </worksheet>
    <worksheet name='Sub-Category making maximum profit '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category making maximum profit </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
          </datasources>
          <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Profit:qk]' />
              <text column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' />
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C972F46D-BE0C-40C2-9125-83963355927F}' />
    </worksheet>
    <worksheet name='What is top selling Sub-Category in each state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What is top selling Sub-Category in each state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
            <column caption='Sales Rank' datatype='integer' name='[Calculation_723672171185471488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_723672171185471488]' derivation='User' name='[usr:Calculation_723672171185471488:ok:1]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_723672171185471488]' derivation='User' name='[usr:Calculation_723672171185471488:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:ok:1]'>
            <groupfilter function='member' level='[usr:Calculation_723672171185471488:ok:1]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:qk:3]' included-values='in-range' />
          <slices>
            <column>[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:qk:3]</column>
            <column>[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:ok:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' />
              <text column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' />
              <lod column='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:State:nk]' />
              <lod column='[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:ok:1]' />
              <lod column='[federated.1i0q9j906325021e6fd8u19ekc4g].[sum:Sales:qk]' />
              <geometry column='[federated.1i0q9j906325021e6fd8u19ekc4g].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i0q9j906325021e6fd8u19ekc4g].[Latitude (generated)]</rows>
        <cols>[federated.1i0q9j906325021e6fd8u19ekc4g].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C2065531-C142-4CE1-86D0-5BE30B67C5A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Conclusion'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ&#10;&#10;</run>
            <run bold='true' fontsize='24'>Conclusion:-</run>
            <run>Æ&#10;&#10;</run>
            <run fontcolor='#e15759'>Weak </run>
            <run>areas to be worked upon to increase the profit:-
Region:- Central 
Category:-Furniture
Sub-Category:-Tables , Bookcases
</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='36250' id='7' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='61750' id='6' type-v2='layout-basic' w='98400' x='800' y='37250' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontsize='24'>Conclusion:-</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#e15759'>Weak </run>
                <run>areas to be worked upon to increase the profit:-
Region:- Central 
Category:-Furniture
Sub-Category:-Tables , Bookcases
</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='36250' id='7' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{80B6C9D0-8009-41D2-8DE4-26405691A019}' />
    </dashboard>
    <dashboard name='Profit making sub-category in each state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Profit making sub-category in each state</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
      </datasources>
      <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
        <column caption='Sales Rank' datatype='integer' name='[Calculation_723672171185471488]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='RANK(SUM([Sales]))'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_723672171185471488]' derivation='User' name='[usr:Calculation_723672171185471488:ok:1]' pivot='key' type='ordinal'>
          <table-calc ordering-field='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' ordering-type='Field' />
        </column-instance>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='37' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
            <zone h='5469' id='38' type-v2='title' w='98438' x='781' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92447' id='35' type-v2='layout-basic' w='98438' x='781' y='6511' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='55208' id='3' name='What is top selling Sub-Category in each state' w='60254' x='-13477' y='10417' />
        <zone h='6510' id='4' mode='checkdropdown' name='What is top selling Sub-Category in each state' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:ok:1]' type-v2='filter' w='13574' x='47363' y='14974' />
        <zone h='30469' id='6' name='What is top selling Sub-Category in each state' pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type-v2='color' w='14063' x='48145' y='25521' />
        <zone h='53646' id='21' name='Sub-Category making maximum profit ' w='44434' x='63574' y='10677' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Profit making sub-category in each state</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='49' param='vert' type-v2='layout-flow' w='98438' x='781' y='1042'>
                <zone h='5469' id='38' type-v2='title' w='98438' x='781' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6510' id='4' mode='checkdropdown' name='What is top selling Sub-Category in each state' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:ok:1]' type-v2='filter' w='13574' x='47363' y='14974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55208' id='3' is-fixed='true' name='What is top selling Sub-Category in each state' w='60254' x='-13477' y='10417'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='30469' id='6' name='What is top selling Sub-Category in each state' pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type-v2='color' w='14063' x='48145' y='25521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53646' id='21' is-fixed='true' name='Sub-Category making maximum profit ' w='44434' x='63574' y='10677'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EBE4316E-4425-4E39-B868-DFDDF48B8691}' />
    </dashboard>
    <dashboard name='SuperStore Data  Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run>SuperStore Data  Analysis&#10;</run>
            <run fontsize='12'>Weak areas where we need to work more.</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Sales Report' name='federated.1i0q9j906325021e6fd8u19ekc4g' />
      </datasources>
      <datasource-dependencies datasource='federated.1i0q9j906325021e6fd8u19ekc4g'>
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='40' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='64' h='9000' id='41' is-fixed='true' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='89000' id='38' type-v2='layout-basic' w='98400' x='800' y='10000' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='42000' id='3' name='Profit made in regions' w='40000' x='900' y='13750'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone h='7250' id='4' name='Profit made in regions' pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]' type-v2='color' w='14000' x='30700' y='12875' />
        <zone h='41500' id='5' name='Category Based Profit in a region' w='35700' x='49800' y='14125' />
        <zone h='10625' id='6' name='Category Based Profit in a region' pane-specification-id='3' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]' type-v2='color' w='11800' x='86000' y='20250' />
        <zone h='36500' id='7' name='Based on sub-category sales in diffrent region' w='47400' x='200' y='58375' />
        <zone h='12250' id='8' name='Based on sub-category sales in diffrent region' pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' type-v2='color' w='9900' x='36200' y='62500' />
        <zone h='37875' id='9' name='Funiture loss in central region' w='36800' x='49700' y='57000' />
        <zone h='14875' id='11' name='Funiture loss in central region' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' type-v2='filter' w='10700' x='87200' y='62250' />
        <zone h='12250' id='12' name='Funiture loss in central region' pane-specification-id='2' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type-v2='color' w='11700' x='87200' y='81750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>SuperStore Data  Analysis&#10;</run>
                <run fontsize='12'>Weak areas where we need to work more.</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='55' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='54' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='64' h='9000' id='41' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='3' is-fixed='true' name='Profit made in regions' w='40000' x='900' y='13750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='4' name='Profit made in regions' pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]' type-v2='color' w='14000' x='30700' y='12875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41500' id='5' is-fixed='true' name='Category Based Profit in a region' w='35700' x='49800' y='14125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10625' id='6' name='Category Based Profit in a region' pane-specification-id='3' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]' type-v2='color' w='11800' x='86000' y='20250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14875' id='11' mode='checkdropdown' name='Funiture loss in central region' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' type-v2='filter' w='10700' x='87200' y='62250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37875' id='9' is-fixed='true' name='Funiture loss in central region' w='36800' x='49700' y='57000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='12' name='Funiture loss in central region' pane-specification-id='2' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type-v2='color' w='11700' x='87200' y='81750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36500' id='7' is-fixed='true' name='Based on sub-category sales in diffrent region' w='47400' x='200' y='58375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='12250' id='8' name='Based on sub-category sales in diffrent region' pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' type-v2='color' w='9900' x='36200' y='62500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5B475E78-2D16-45AE-88B3-B8C95A95AD8D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Profit made in regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{38C0F975-F29D-400A-B2A5-CDE69B68ADBA}' />
    </window>
    <window class='worksheet' name='Category Based Profit in a region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DD12B04E-7ADB-4102-88F3-127C1D303BE4}' />
    </window>
    <window class='worksheet' name='Based on sub-category sales in diffrent region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4FDC3959-51D9-4532-B0F7-2DE1A5B6DA5B}' />
    </window>
    <window class='worksheet' name='Funiture loss in central region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type='filter' />
            <card param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B22AB1D3-85A6-485E-94E2-F7B0CD6D357C}' />
    </window>
    <window class='worksheet' name='What is top selling Sub-Category in each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:ok:1]' show-morefewerbutton='false' type='filter' />
            <card param='[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:qk:3]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:State:nk]</field>
            <field>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]</field>
            <field>[federated.1i0q9j906325021e6fd8u19ekc4g].[usr:Calculation_723672171185471488:ok:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4008F304-3E18-4A04-B12B-23CB6D5AFC2A}' />
    </window>
    <window class='worksheet' name='Sub-Category making maximum profit '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93C4EACB-0F8C-4B3A-A6E5-F93BCE03260B}' />
    </window>
    <window class='dashboard' name='SuperStore Data  Analysis'>
      <viewpoints>
        <viewpoint name='Based on sub-category sales in diffrent region'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Region:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Category Based Profit in a region'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Funiture loss in central region'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit made in regions'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i0q9j906325021e6fd8u19ekc4g].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <device-preview visible='true' />
      <simple-id uuid='{3D763111-9DF5-40A2-8774-F62C8157E89B}' />
    </window>
    <window class='dashboard' name='Profit making sub-category in each state'>
      <viewpoints>
        <viewpoint name='Sub-Category making maximum profit '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='What is top selling Sub-Category in each state'>
          <zoom type='entire-view' />
          <highlight field='[federated.1i0q9j906325021e6fd8u19ekc4g].[none:Sub-Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{10E9AEA6-BF08-431B-9044-55285B103B84}' />
    </window>
    <window class='dashboard' maximized='true' name='Conclusion'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{BD7911F2-7AAB-49AD-897C-02B6E65A055D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Based on sub-category sales in diffrent region' width='192'>
      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
      5IcVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Category Based Profit in a region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conclusion' width='192'>
      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
      S+6MAV1L9H0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Funiture loss in central region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit made in regions' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit making sub-category in each state' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sub-Category making maximum profit ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SuperStore Data  Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aXBcWXaY+WW+3PcdiQSQWIh9IUiCa61d1dWL3C3J1tKWPSPZCrttLR7P
      6O94JkYxYXki7Ah7HDNqOSTHWA45pJZkqapVXaqlq1jVLFZxJ0Fi34EEkABy3/eXOT9AsphI
      gARAgACJ/CIYTJx877z7Xt7z7r3nnnuupFQqlahS5YgiPegCVKlykFQNoMqRpmoAVY40VQOo
      cqSpGkCVI02FAdy+9gU3bl7n9r3xXSnMJYNcvHiJq1e+ZCUQZXZ2dsc6vBO3eP+zq3z+2UUW
      fdGK77ejM+Wb4T/9yTtPvlh4lncvj2z9fT7O3ZGd30OV5wPZRsGMx8sv//IvAxD2zoK5BVXG
      iz+vJzA/REmQozbY6W5rZPDGNdIlBefPnmJyYoKVuTHkMhnW9tfpd+shn+YP//pjBgYG6Ow9
      wfzYHWKpPH0DZ1men0ZMBCiZm5EkVokkcgycO4dSkJBJhHG3v0yPS8U77/wNzm99jVt3xxFL
      Uk4db+fjjz9mYOAcvb3HuHNnBLEI5y6cQyb56j6u3BylxSrFnxJRJZYZnPUhLaTpHbhAeGmK
      QCSG0d5Am3H9+OHhYXp7e5kaG8XldjF4dwy13sSpviZUMhmhlQUmFn1YrDV0HHM/kx+nyv5T
      0QKcP9nDxxc/ZXBkivDKLOEMZMIrePxxllYDDAycYWZ8iPk7l5DUdNFTK+Pzux4+/eAdarsu
      8PLXv01y/iY/+egnhLNSWlpaGBgYILc6RFhaw/lzp7j06WcMXrtEXDDTqImxktZy9sQxPv3p
      9Q2lkSAIUmQqAzVWA6G5OywkVPd19qNQaKm1m0isjDG08GhLUSJZgK+9fIprV24R93tQWBq5
      0FXLjVEPTpcLQZBx9coXD88ILU6xGs9xb3SM1fFBsgoL/T2dQIbJSQ+37wziqG2gvaVhf36J
      KgdChQE4Go7x1ptvMD+13i0QRRFRFAGQSCQP/y8WRSZH7zLly9Pm0lPX0k1HYw3ZnMiF197g
      66+f5NKl65SKRcpm2krrf2vMTs6d6IaiyOz0OHfHPHR1NJWVpZhPU0DG8Oc/IaN30tfViigW
      KRaLAEzfuEhIauVET8dDGUB8ZZykqGJoeo1IYBEAmUyGVLp+u++9/xF9J05hNWofnvPKm2/y
      /p/+Aca6bppOvMrJRgN/9hd/9bDsb3zrO6jEBG//+IPdPusqhxDhd3/3d3/3UcHI3ZsseVdw
      H+uisbmZiXu3SWQKuOobmRm5QTabo6G1h2Md3WRCqxRLYKtxoVbKsdlsZOIhbg8OsbIW5vxL
      56izarl1bxRX20my/mmm55c599IrKAQJNpsNhd6BUoyTF4sYLQ4MWjUA8/PzrK75ePW117BY
      jcxOTJEplKhraKRGL2NkYoFjPV14piZJ5URc9W70ajkAa6shBs6fxV3nQi2TYrTZUGmN6FVy
      kKmxaqR4lpbRmWy4ahwgV2G3WhkdGuHb3/km6dAaE3OL1DjrcDntgJxs0s+KP0J9QxM2i+lZ
      /05V9gnJTkIhvvzyS1566aX9LM+Bsbo0x8JanHMDxw+6KFWeITsygCpVXjTKxgDFXJJERsTn
      8wEQj8crTvB6vXty4b3S8yT9m93Dds6rcjQoc4NKBZgYnSQ4c4fjX3sT72KQRDyCrcaFJBsm
      kpGgkBYJBwN09h5nbXGG8ckl6htsrIVT2A1K1vwxenpamR4fx15bj8cb5PjxPlL+JbR6NRO+
      LDZVifHhQSbtDTQ5DCyu+HFY7XjjCWqMKvz+GBdee4X5qUkkKT/qug4iyyuEk3FqXI20u5S8
      9+kwdocVjSRDKANuq5bFFT+d3R2MTc5TLIFZr+bdd9/n7OkBfMEQjromXKoMQamB6bF56p0G
      ktEg0Qw4zCqiKQlyaYFgIEDv8eNc/+KnRBMZ9CoBZ3Mni55FrA4nqzNDNLV24PUF18vTXHdQ
      v1+Vp6TcCyRokWS8uLrP8MWHl7CqM0TycvKFDKFQlAWPh3h4lUA8hyCBUDBE0reAZy3BiTOn
      WZidRSkUWFwJIUiyLPrSKIU8oXAEV62en1yZRFsKk0wVcblb0KvlzMzNolYKBFYD9Jw+w+J9
      Hcks5JMJkgoD9z77mFQyRl6uoJDPQjGHs6EdoZRjdm4O8gUm7usZHJzi9Evn0avlqPVmOjo6
      iEZjnL9wgfDaEhq7i8GLn6LUK0kmk+RLAi61wGI0w5nT/YRXZ4nn5EgAmUqH1WbjRFstN2+M
      0XP+PKloAK3ZQSkW/Ko8VZ5bKrxAiUgcd2c3EolIR3cvMd8yZlsNhUwSvdlGS0srVp0Shc5I
      Oh6mKFXQ0NyM1WxAq5SRzIHdoiedLWC1mMnnMjic9RiMVkr5JDadEmtjO2q5BL1eT63DRjiZ
      o6GhAZPViP6+jvq6Wmw6gbioRW/QcaK/G9/yCjZnLUadBqRK9FoFFpOBglRBZ3MD4WSO/uNd
      DN25i8VWg9VsJOxfwVlXx/C9IZo7+9Cq1eSKIs1OIypjLYpimmhJwTFXDUaDHpXOjE4pQWc0
      IwH0ej16vR5LXQPzw4PUNrZiNuhwtzQ9LE8+k0Kj0RzML1jlqagOgqscaarBcFWONFUDqHKk
      qRpAlSNN1QCqHGmqBlDlSFM1gCpHmqoBVDnSVA2gypGmagBVjjRVA9gFly5+yOWrt8pkVy9f
      wusL4PF4APjis58wND6Db36SS1dukFlfVMfQ0NAGbXHefftvuX1vbNNrxb0TzAeq8Ub7RcWi
      +CpPJhqNYdXZ+eGf/FfMNQ6KJSn+lTVShQJL8x5++X/4NVbmp0nK7bT2ukgOT3H1808Ynlnl
      REctf/Dv/y2tXceZ9MX57X/0FpFwHENkhf/4f/0ldb1nKUllRGbu4KxvJlfI0PmKm4/e+xGC
      XoZ/IUR9xzleOdt+0I/hhaBqALugf+AcbrebeqeNXCpGVqKmp6sLgBqTAZDQ0nUcQa8lmy1g
      sFiwWEyoDXZqbSbUcgVGqxO1JQqoaGx0UuOwMfDSa+jtLgr5PFKHBrPVzuLiMna9DElDPXK9
      gbYmJaAiEAgAYLPZDuw5vAhUg+GqHGmqLcAu+LNPhvnhJ8MP//7Rv/kV1la8hGJJujraHspD
      AR+iVIH9kC2izyQijE0v0tPXg0LYu2FgNLDK9MIyNXVN1Dut2zon7PUgs7vRyzf/3uPx4Hbv
      Xx6mXd39yuIcwWhy1xfNp+Mks+KuzweIRiszxh0ks6treD1TfHHlS27evsVPL3/Jx599zODd
      u7z9zl+wFggfdBHXETN8cukmvd2t5LI5JkbusbwWxDtymT/+qw8Jx9MsL8yw4g8DJWYmRpj1
      rECpyNjwXaLJLNFolODaEosrfgDC4fV7GxocpnvgFKN3rlMoFhi5N8haMEohl2LwziDJbIFY
      aI3J2XVHQWBlkatfXCZeWC/a3NQoiyt+sqkYd+7cIZktPHQqLM5NVegCmJqaIh2Psri4wMLy
      GgAlMcfw3UH84fXlsMlolHDYTzieZmFmfF1eKjIxcq/SALwjl/mrD7/kvR+9QzS32RMsMDw+
      j0UjJRBNlnk15u7d4OKXV/n08jUAsuFFfvzRT7l65QaPqkqsTDIf3FT5tqn0pkA6Hiaezu9Y
      14M10E9DOhGjrrGdQhGSySje5XnqW1rRqRSYLVY4JD3NXGAeY2M3coUanVJCJlfg/fffx+Vy
      0drZhzyxyEJMYOLebe7e+BK5pZ7FuUlufvk5jsZ2rn/5OXdvfokvLpJdnWTaF+POncF15WKW
      2zeuE8kUkeRz5ApF3n//A25f+QKZzkSpkOXazWG0mVVGJqe4MxPkmPv+ctJskCuDc6hVcrKZ
      DEUxxwcffQJAaGGYtZyWkcGb3Hqoa/13XltbY2XyLsGilrmpdU+amM+RE0Xef389h9P80G1G
      lkNkVsaJCRbu3b7OjS8/x1LfunkXqLPvJLmZS8wMXmImJOVMq4XROT/kUvSf7GBuboFgm43B
      VSlL47eQKrT0dLRgr7Hwye1rDJzsI5kVUSo0SAoZjI5m5PkU1++M4AtFebndDMDH77+LIJXS
      3N7GzREP/T2dtDXXc+niR+iMVkbGxrBp5Zz85i/gHbnDgi/E18+08+XwMn7fKq2zo4wsRymJ
      Rd762suEPSNkXK/wwTt/Qo1ZT+3Jb9BWo+WHf/L/0XPmdYJLk8gFKc6OU0zeuoZOkcHW9x2C
      s5MszU6QR0FBqiDh92Bz1pLISslGvJht9Zw4e4oHrXRvs4Nf+Xpv2TN789XX159de+ve1NR9
      QmFrJHLzC/JtZlanBkmrmrAaPSAI5NMpRDHPxMgEDRYt6YJIrUJGPJFEY/pqxZtUqaertRGo
      58//6P+l79v/aP0LQcmpM+coBt9j6N5tVPU9GD1LtPacJJMIcuXWPZYWZtBp2rHb1SCVkUol
      0QEiKt547QwXL36KTa/m9PnzrAZuAlAUC4wP38NuVHGsp59cIsiVW0N847WzD0qEw2Ejsbhe
      nScGb2JpPYlh8UGCAzk9vR2kx64zMnQPi1ZBQSygkEkrl0TG/R4Gp9do6+rDIAaxd76MMjyD
      oe0MlsIaqvpOCsksvc1WZmNy7HoZp0+dAODSF9c5N9DNT68McnagH4mgpL2jjeWhLwmkSwQS
      GQK+NdrrzcRlJmaH71JX50Rtc6MtJVkNRGhpamBxeYVz58/j9/noa7IQTMHiaphQwIdZCo1n
      X6aUjJCIhBDUOpBIaGqoI+73UNC7IRvndGcdS2kNLrOaSDzJmVMnuH71Co66OhTkyEis9DZo
      icsdZMIrpHMir7zyCnPTkyjVWs6fv8DSwixdHa0szc+gdTSjVwkA1Ji19LU4Hv57rpDKaag1
      Mzo5T3PPCZJr87R29aK31FKMr6CuaaXBokBnreFYUwOLszOEExnefPMNFqbG6OofwGGzolKp
      AAlL/ggXBtZfBkaDhomxCZwtnXR0tLE6P0NXbx8GrYK5JR8DAwO0t9STLMjo6OpGXUog6B04
      rWbkMjlrS/Mc6+yjraWe+eUgvV1t1NTUYKltwqQSMdtd2E2a+7pOIhMkGI1GTLYatCoVVrMR
      lUqF3VnL4sws3X29aNVqtEYjapUKk70OnZDFWtNAU0MtszMzlV6guM9DWl2LQy8n7luvUGaV
      yO0bN5CoTZzsO8bs7AottXpmw6DI+onmZPR0tOBbnmduaQ2VWk1713GkuQh3hieQytX0d9Rz
      694UJamMU+21xGV2okvjRJNZGtwNLCx40Bqs9HS0PBz4zM7OYtfJyCmtTIzcI1+S8tq541y5
      dpuCRM7LAz3cuDOExmDheHf7w/LG/R5qzSr8BT0us/qhvvmpMQLRJE2tXXhnRwgsTuE6/0to
      smvoVVIm55apb25HzMRxu914PB7S8TChWIaTZ8+iEtZTQ2av/IDc1R88fGb63xkmEvKzGozS
      2bbeAoQiUSwm4zOq1ftDPptkZHQC97FOLIbKNc/xsI8Mauxm/QGU7unIJmOMTkwfVTeoyOCN
      W6RLMs6ePYWww7M3M4BPPn4PnaUOg1JAqdUzNDKCQW/AZjGi1ZtoaaxmlD6MHFE3qMCJM2ef
      fNgOqK9r5NrdEbLhZTQONxG/l3giR1trK7miUDWAQ8oRbQGejsLiDcSlGw//Vl74rQMszbMn
      Ho+j1z9/3Z7N2FcDSKWq+XJ2wvPyvA7SAMLeee7OLHP67AV0yvte/HyacGY9E+BO2dcu0IN9
      BQ6asaE71DR2bDqQO0wclud1mAmveAhHwly7eoWxiVnO9rdQq0gyHtVRyiVQ6fVk03m+8eZr
      29J3JMYAwWicpWtf4DDr0Blt+NJ5NKU8pVwCvcHC4qqf3oEL2HRbzMdXOTSodGYa3EYK6TQD
      p/opZELkC1FAB4BMqcOs276+I2EAC+ODONpP8JMPP+NYRweqtibEeISwP4qKOdT2JhZ8CWw6
      80EXtcoTcHX04Xrkb69nFqm6n2/Yd/fb7esY4DAOltLxEDOLK/R29xx0USp4Fs8rm82Syz1d
      GMrzMlbZDs9NC7BXD12tt9DbbdmDEq3zvFUGpVKJUql8aj16vZ73vhhlJbiz/RdqrXq+83L3
      U19/rzgQA8hkMuTzeRQKBQqlEsmTT3nsAHF1aQGUepz2p6vYK0sLGGwutKrysUA2m92y0mxW
      rngkSKYkx242bHmtbCaDXKV6rtekvvflGLcnl3d0zqn2uqoBrK2tEVxdwVhbh14uoSiVEwlF
      yeYS1DW2YTPtrBsQCAaxubTMTo2j0VvIFgr4lubpOXkWjXK7t5hneXkNlUbHwqwPi8OJSia5
      r9OEiEBPZ9uT1QBrgTCN7jqmJyfR6PRE4ilyiQA2VyOSUolsMoooynB3tvL07+Lnn9sTS9ye
      2JkhAfzTnzv31Nc+EAMQyGJz1rDij7MS9aC21RNYmMXd+RT9cjHN6NgwNc5WopkMDbad96WN
      Bh2zUzPI1QLz84uIhSxOs4GCoMKsUWxbTyGbwuf1cPveGO3dvThMGjJSI4lYgrZjtbz/t1+g
      NzTh7txxEV9Ibk8s85/fvbbj855bA6hvXF/Q7W4EuN8cHu/d8vgn0dt/CoDv/tzTbGItp61r
      b5rmzp71nSa/19TxiPQr38V3f+6X9uQ6+8GadxEUetKRNQw2J6tLi9jr3KglBeR6M0phOx3W
      54cKA0ilUns2IZNKpfZEz17r2kv2+h4P2mvm9XqxuVwISiOrE8PUnjzJ5K1R1AYdfd3mhxun
      FwoFduNALJVKFAqFMtmjm5zvhI16dkOFAey1R2Mvf9CDrhxbcVjLtRusVivZbIlCcg2Dqx7P
      6CS2unqMCpFMoYRaLiAIAjKZDIlk562BRCJBJiuvdlLp7lwBG/XsSsdTa9gjsld+sOV38u6f
      B+nWHpUqe4e7+cGKtvXo1fqGxoMrzDPg0BjAo/H1GxHqz4CpagBV9p5DYwBVqjwtu5mYeyEN
      ID/yDsXY5ju+C/VnkDWcecYlOqwU8c7PkVcYaHTZd3z2MVWQgmbz57z1OaodX2e77GZi7sU0
      gNEflS1YeRTF+d+qGsBDsly8PEh/fzvswgB+03kFsbD5c94KwXkG+Gc7vtZ+8TzPxFd5agR0
      OjUKxSOTfMU8kWgC/+oymXyRpaUlMtksYjZNTnzxFg++kC1Ale0Rj8XJxNZI5L/KNL20uERK
      LCBHgW/xKsamFgbvjqHRqunrbt+XeYC3DON0Nr67Y12FQvlS1N2UZ9cGIOYzeH0RzDoFeYkS
      MR1Fa7YhLUkpFvOo1Ttfnlbl2RLyB1FrtYiPTEQlEnGi6TwqSQm1Vs/asheV1ohZU6qYB8jt
      0TxArTKJVbuyY10b9exmXmLXBjA1MY7K5MQfilIqlZBIIJacYHkhyamXz5S9KZ6WYnFnuh73
      JigWi3tSpgfs1T0+0PUsaTxWx7vvfoypNvJQ9iCM46iwawPQanUsr6xg1cvJS1SIqTBaix6r
      1UoykURrMTx8UzwtUqmwI12PezNJpdI9KdMD9uoeH+h6liwuhnj1pT4Es/OZXne/+KZpkh77
      +I7O2fUv19DcSkPzbs+uchhY8Uwj0dpRpCI8mPl9nvmmaRLRfuvJBz5CdRB8hDn78hsHXYQD
      p2oAVXZNJCwh49vZwFOllXCYFpBWDaBKGZGgj6JMg5iOorfWEljzYrPbkVNElKlQPLIe4N4d
      Gau3t79QCMB5SlaW1eGgqRpAlTJkCgVrgTWkJdkzmwfwrYJ3eOcOgIENep7pPECVnZP6y19/
      bIgGvb/6jEtUycToKDWNxwguLz5xHmCv1gMEAwJjwzuviuc26NnNvETVAKqUMXDuJQDqnTUH
      XJKdc/e2QHB4Z9n9qgZQ5YUhGpES8O0svO2xR5fEHMuLHhKZvZs5rVLlMPFYA/BNj/Kjn7zH
      1HzgWZWnyqGidLSjQQ2uRroaVnE4NluOWGJubgGtSiCHimI6jMZsRSGRU5AIWIzafSpylWdF
      2u8FpewrL1BPx5NPes544hhAb9SQiKXAUj594VteJJ0vIpMJlEopJHI1qfgqt0cjfP1bL1eD
      4TbhSeU6bPsDCEola7Oer7xA+SJq+Yu1hOQxBpDj1rXrDI5N8K2/V5mxrSSREI9G0Mj1FCQq
      iqkwGouJ3m4LwXAMxwsSDPck16XQ+6t7Vq5nHQz3JBQGGwMnbAddjH3lMb+cgianlWmfjmSq
      8s1U42qgxvVoJranycpW5Xnk23/wh3ui58T3/zknvv/Pn1rPbsrz2BZgMZTm1IlX6W17zjaD
      rvJM+A8/vMTUon9H57Q12PmdX9ne9kXPgscYgIBKJWdpehidyUaLq7p7ylHAtzCG1N5JYPYe
      OoORQCiM3lKLQSFisLvKcoNOLfp3nIXhsPHYzmt3/2lOnq3OlR0lHBYjXjGP1lhDzDtD4/3c
      oAm9FluNa19igQ6Sx7YAe7CRSJXnDG8wTkoQkGWjODt6WZ2cpaWzHa2wf7lBD5LDU5IqhwLX
      w5Tu67FAFpNx36955DbIqFLlUQ5yg4wXa1ajSpUdUjWAKkeaqgFUOdLsegwQDqyx7I9iUEke
      CYYzIcnJUJqM2KrBcM8BIum0CIhHNpPfrg1AqVRhNkso5rMoSkUkejPFfIzxsTBvfuuVFyYY
      bjsBbM9rMNzS3F0+vDjJwPkBTvRsbwvYF41dG0A0GiGVA6NaSl6iuZ8ZrpYLFxqJRmJYzS9G
      MNx2Atie22A4uYEmlwWNdneJSn7TeYVo9u6OzjE6+4Ff3NX19oNd187a+o17R+08v3yVg8Xv
      nWVxLUJD5+4WuhxTBRF3mNRWUNXv6lr7RXUQfIQ5efZ1am06EolExXfexXlC0cTRXhFW5UVH
      hsGgRqfTVXyz7PXSIpWAUrnveYEO1T7BVY4SWRYW1nA2d22QF7GazXh9AXISyb7vD/BC7xP8
      Z58M88NPhjf9rrfZwe99/839LkKVLbh55Sau1jaaGzamR5fS0r7RKPaPb5omdrVDDPzLsr8m
      PX4S6eyONDxXLcDQrI//7T9f3PL7H/2bX3mGpXn+SSTi+CNrTM47aW+qO7By1MgTmHexQ8xG
      /u8/v1TdJbLK9vnaN75z0EU4cPbMCxRY85LO5chmC6TT6b1SW6XKvrJHLUCJeCpTtkfYYWcv
      u1Nr4SQXb89t+f0/+HrvjspW5dmxRwYgIREJVuwRdlTwhZNbDvShagCHmT0bA/SdPPxv/SpV
      NiIpbZjNSKVSexaUlUql0GgeH2dSLBa35Qfejq6d6NsO29G1l+VKpVLU1Bz+tOTxeBy9Xv/Y
      pGFbIdSfQfPL/6VMlr3yA3JXf7Djcuh/p7zV/a1/91dP7wXazo+5E/R6/cPPkUgEo1pGTFRi
      1KzncV/fY7h8QiURDZLISXHazVvqIpckkpdDPoXJZHoo3qgvlUoRiURxuWq3LuRT6tq3ch1y
      FuakxCZ2FsBnyEt5djMMT+aZukEXF2YJqLXUNrY+lG2WWWB8eAxDnbvCAB4lElxl0pejqb68
      Am3Ut+adZSVUfGxFO6y6DjsLcwKrO9zZxakQ9s0AdhOd+uwMIJdEotCh1euRSR8/hb4ajmCw
      Pz4bXS5fRK/TolY9PndLIRYkmKqMdXkedB00YjbO0Nj0lomx9gq/T8LyLvYI27gkfjfRqc/O
      AOQqCukkWbUC2DqIShRFBk4cR6p8fOUolYqkU2mKT1hkUtPcjST6+Onxw6rroEmFIjR2d1Qk
      xspmswiCQMM3vomhc/19LshkiPeD0x73WW13kEqlEATh4VhTdPQjHv/HO9IjFgoP9eRyORQK
      BTPTJVLTOzOkikHwXvJgsPSApZlJ0rk0amcn9ebN35DxaJhFzwJFhZ7ejmNb6iIb5tb4Khq1
      gq72Y5togmw6yfLyEiuhFC+fPbl1QZ9C116Wq0LXQVPMMzY6ga3OjVYQkaiNqOXSw1fOp+CZ
      jgE0Wi1ZmQaXaevugd5oZmnxCxzulscrkypQySS43e4tD1GqtRRSIfyhJ4TNHlZd+0A2myWX
      y237+PrG9YVPIjLIJIln1gfwe8FmDpBnreeZGoBaq8IXi5AriKjkmzdVfr+f/pMnyIpPaMqk
      CqTSEoV8HlSb7wwYC/qx1bXSrqlc8PFc6NoHlEolyj3IebkXLcBeuayfRs+zWxGWjTA8vYJM
      Lt+y8gOkkzFiqTwl8fFvqaGhIcSSFKN+a7dtPp/DsxpE+4RdTQ6rrueJSCTCyvIyqXiU7CPr
      W/LZLFstd9mq0k6NDxOKlr8cstmtx0sb9SzOTRMIxx57fiQSAZ5lCyCRY7GYoJAlmy+i3OLH
      dzdt3m/eiNliIZsXiSfT6LWbp/SwOuuwbgx1f450PU/EYjFK6RAjwTQmYQZfSkDIhjEarWgc
      tTTWbH+nmXg8gdWe5v0ff0ZzWxtSmYLA2hpnzp/nye+MLEWpDq0kw7vvfk5Hdxf5fJ5UJIjF
      XoNGpeD27WGO9XRhMpn21wDKcs0otBxr3H2uoI15a+rdTbvWtZGn0bWX5Xqec/PYdSpW5HVo
      w36UagMNJh2pYA6FxsBOe+cKhYJsKkWty4FCayIejWC3bDdJr4JsKoC/pKG59Rg6nQGFAAm5
      BEGtw6CS4HLZkchVwD57gaq8mLxIXqCqAVQ50rw4o7AqVXZB1QCqHGmqBlDlSFM1gCpHmqoB
      VDnSVA3giBH3ebj05XWu3bq7ZUzu5c8+JhAIEIgmiUajD+WZWIAvr1xlbmltXVDKc+v6Va5e
      vUn+0Wt4J5gP7C7SdXZihFu3bjG/tPrEY30+H4hZovHtZyGZmxzl5o3rRJPrJa7mBTpixP0e
      rE0DaFavMTQ5j0QsUFNjY2l6HInaSINdyejkEp2dncRSOS5d/IgzF16jp6OF1YVZaprbmB0b
      pbm+huTKJEllLa/2NVDKp7h+ZwSV3kSDMkGSIrMTI/iiWU6f7OLmzUGszgbamutJhn0MTc7i
      rG8hH10jls5gstdxzO1idnGFt956CwCPx4O71szsShpJNkA8L0cmxkln8tjrWg3a8H8AACAA
      SURBVKGQYXVhkQ+uevnuN8+QyimRZcKYa82MTXmx22tIBDwkRQWnT/RSSKwyHxR548JZEDPc
      uD5YbQGOIuNDd1iIyzDmloijI+8dQ99yEm3WR15fS0tLKzZljll/htbWVno61iNzs0UpF9/5
      c5RqFfGsiNbVg1MW4sMPPyKZL1IsitwdfLAiq8DlL65RCM1wZXCSQCyNcD+X5817Y5w7d56F
      6TFWgxEGBs6w4pldPy2f5tatW3i8PjweDxTizHr83Lk3Sm9XG8FIkoEz5/DMjuHxeHDW1tLa
      0YNNW8SzEmZldpZMJsysP0uDIcsXg/Msj97AExPJhH1o7seglIolikURKWT50V+9zbUrnzO7
      FNj2Q7x8+fITj/F4PNs+9lHS3hFuzYaffFzYiy+ef+JxuyPN5cu3tvw2n44T3rLpDXP58sh6
      E52L8Ndvv0c8vMrbf/MhyezjEw54PR72644e0Nl3kq+9/gpyCTidTsy1dUzducrMWhrzhmgM
      iZhhZGK9ckZicY6f6Gd0eAiZVCAdCxJK5BCKeZZnp4jkJAjCg3eqQF1dDSpbM+3uGhwWPaMj
      64vYrXolV69doyRTV4Yxy9UMDAzgdjlIx0LcGhxGBBw1TqSSTZbQyjSszY8SSJZYnRtlcna9
      zjmdTlCaqLNqcbX1YlcL6Oq7iExd5+aN6yzMjONPlpCUSqnSxx/f4kSXg8nVIg5tgbXVNdpO
      nmH4xk0cDY1YlCILqyH05hpUYpRgUiQcjfPtt77G1MggoUQGg9VF2DuNUq1FobPT19XCD//b
      H9PWd4ZkcAmt0Ua+JOA0yFkNxTDXuOloruPW1csUpRpOdDkZDyoguIC7VsX7dwLY1FLefPNV
      pMD40G1i6QLt7e1MTk2RL0ox5b2MJ628frKJ4fE51Fo9LTU6Jjw+xJKEFqeRpUAEldaMNBsm
      mRWQyEqcO3uWwdu3OXXqFABDd26QLZTo6BtgbvQWvkiWN948zZXLo5h1JWLJJO6O40wN3sJS
      18jxrjaygXnmc1aWhz9Hq1Fhbx2gxWlk8OYVREmWeNqO1VjEKo3y47thXm3Vcm0xT39TDVkx
      TWNtLRPzK2h1ehTFBAXk5EsC/ulhrG19nBnoZ/Ng6ip7iRRgaX6ahbU4GqWEUDCIihSTSxFU
      cinRaIyRsQkUcjkr3mWW/VHOnRlAp1pvzlaCMc6dO09gZYGiVMHAmXNEg14A6ptaGejvQarQ
      MjAwQCGTYGxiArlcgXd5EQC1Rk0qGSOTTBJN5oiGwxSBtq7jNGhhcsnLyMQs/kiSs2fPIsnE
      yBaKLHg8uFwuOvtOsjQ+hqBRsbK6wtjsEq+8dB6hlGdu2ceFc+dJhH34Q3EuvHSG7jojn1+6
      RFb4asG9VqMmm06RjIcIRtNEPQs8CKadmJxEodKwOL+ASikjGln/pphLksgUUGgMnBvoxLsc
      BCCazDEw0I8MiEajuFwuWjp66GprorWzj2IyRHv/Weanp1BrFKyurhBPFx4+H1d9Eyerlf+Z
      IQUpZrMRMZdFpdGSy+WQKrQYFRJkai25bIbuzg7yYpHGRjdWvYobt24jKNcjO2utBq5du4at
      thGjcT1i78H/9Q4TV++MlMk7OzoQi0Ua3esrjQSpgJQCWaWF5PIE/mgSmUKHb2Ecb15OR72L
      no4WHGYdN27cIBxPU5JIMZtM6Gz1eCdu4mprp5jN0+hupLXBweUr11kLRmmuc3Dl2jX0Zgc1
      TicSwFjXwfzUJAPHmx8+BIlUikyQkE6lyRWK6M1mZEgxGnV0tLdTLElobKhFptSQzWXWH5xC
      i04lW783qQKjbj26UCWUuH1nDK1Ru/6dTIVZpwKZCqNWgc5sR6sU6O3tJpfN424sf2719Q5u
      Xr2z792gKuu8cMFwgZVF5pdXkSp0nDpemYAj7PMysxLmdH/PAZTu8HD58mUG+nsoyHQMXb+E
      zd1BYHGCmqYujrldjz3X4/E8dsnno/h8PhyOx2f4OEheODeorbYBW23Dlt+bHS5OOx7/A7/I
      xP1L3J5cZHUtRGdwiYyuheGJGV51uJicXcTZ1MVHf/sO7o4BEr55kpkCAy8P8Nl7X6LSCPSc
      7OPixYu89e3vUu+0cemTDzDWHkOWi94fKw2wNH4TiUTE2nKWVGCNbDz0cCyWj60hKNVIFDok
      mTCFkoK+gdOonvEGmQ+oukGfGXkuf3qRuSVfmTQcfrK3ay+5MzrDay9foK7GQi4ZJSdoaWlp
      oauri9bWVlrcLiRyLZ3Hapicmkcj5JldXsVkb6DFpqakd9La2kq9c32FV7Yo0N/d9tVYae42
      2aKZvmYnkXSBaDRaNhbLFaUMDJwhFQ2iUWtIp+KkswfX4XtyC5BP40sUcJhfjAUQB0cBj8eL
      KIGP3hmmsesE6UyGVnctU2P3QKUl7F3G2XKc/u7mJ6vbJd3H6rl0+SqZnIhCawEZmM3rDoEH
      YxGn0wkoaG9rArkat93CYiKBSlFEIQVJIcPSaoB6p+3+sdDR3k6qAI1NfcyM3GJwOIai1YXR
      aMSkkT8ciwml3MNrSaUlBEmRbH53m+TtBZJSarn0Rz/8gm98/Swjd0eQSuDsuT6u3p4mGg3z
      D3/2PJdHMxTCE6i0ejTmemaGruCqMaOo7Wfh7uc0dfZzorfjwG7i+SDLtUvXUOh1rPkjGLQK
      Jua9nD7eRToeApUWtVwJKOjre76f5b3b14hEk5x46WsYlIe7kyEppZZLl0fSvNKp5I/fvUN7
      nQa1TIGx6zzekWu8MtCybgBxD197/WV++vkNBGnxvjyNU5tidHqF7373m9X+1A6Ih/2shNO0
      t2xvMFllf5Ah0+N2qUFn5kz3Kqlcic7+fu7euM7MwjKvnOvHXaumZMpx7dptTp45Q8S/AjI9
      7loZgaUgtXW11cq/DTL//W3EpfX03fL6Otp/6e8dcImqyJDreeD16uk/DUA+FUWqUNDf389X
      35tpvJ+xxHDfBeZ26XG7Dq+L67AhLi0jTs2UyT748F0a3O1IxCw1dXUsebz4w2s0u48hkwtE
      gwFKooixuYsmy8En0y0UCnuyP+9hYdM7kWuMnD1T3fHlWSCTyXEYSvzoJ3fRjA9xrM5NQakj
      FfWhqXEyNjZENC3yzYrNrA+GdDr9wmSEgBdwHuAwI9TXVXw+efwk0VSOCwN9mO1OjDot6UyK
      aCxFU62bdO8JLDYHFv3zmzPocWTCy1y+O8fpM+cwaeUMDQ3R19cHwNXLn+Fs6qKpvgafx4Pe
      7WY7T+HOzZscP32a+dG7hAsKTh/vAvJ4PH7cGyb5qgbwDFFt0ue32muwAvDV5J1Wp8d2P5Fa
      b1//MynbQSHXGBGyUS5+/gWNdj1h/wrT80v0draSzpeoN8G/+9f/J7XuLrpOrPDJh1/Q3N5B
      NpOl3qomXVIR93noP91HNKXl7MkOihIJAuBZC/HGG2/w7l/8V9IyLZmMHElyAZuznly+iD8l
      vHihEIeZYd+7RDPrGzgYVbX0On72gEu0c/Y6KVY6FmRweByrzcFKMEqtUUGqqOBEbycTI3cR
      5HJWvD5cDU0UJCX8Xi/SQporY4v8/BtnyErU6NVypsamefkbb1IKzTGb0NPTZCO44mHOn0Re
      iKPUW0lEoygFEb1ew4/efpeBN3726BiAZ+gaQ36Rs6f6UAlw5fNP6T71EvVOAz9++336zwwQ
      jiRYW13ieF8fiUwBnZAnJ+jIxfxY7E6SqTg6kwWJCEbjzgekX3j+kGB6Pbbeqm7hZfc/42/+
      9j26u/pIRQPUuZtY8weYmRjl1TfewqQ/+EHvRvbSAPZjQJ2Ix9Ho9dv2Sh6ZLpCtqQPJ5Ptc
      vSNgUxVRao2M37tGOtmCUmdDngly84vraJs7uHfzCiWtHUHMICuGKSrq+eyD93np7/861//6
      h5z+7v/IdjNVbgdRTDI2NsTN0VF0GiMumwWjbvd5VJ8X9mNArduhviNjAIJUSkPXAO4aI/54
      HrUki1RjpdZuwqCapySoOPfyy5jMemSyDoLRJMGFYUrGdtxGOSd+9dfRGHX4m7pxW1S7KoNR
      VVvxubutFQQVPb0nMFosJJMZDBolsUQS4yFsATajJGYYGZtBazDR7P5qoL/dLWQfJeRfZWp2
      iYFzp5EBgUAAo7xAVO7Etg1Vi/PThJMFjvd0fiVMBQhg2/T8PekC7eXevFUON5t1gbLBRcJK
      F2JwgUVfFJsGPJECLXUG/GtpECM4mvtorLU+URfA/Pw8scAyKakRhRhHIysRlZgI+P3UGaUY
      XB201G8+/zQ9MUosU0QrK5JFhphOolcUWUhqcNvkqFVKBq/fpK6jh0y2sDctwBEZRjw1nwb8
      +O5v1OBQKnnDZj/gEu0NSmsdiYkJNCY7PZ120okIjVowmdRYrRriER8KtWLb+kwmE3JpCZOg
      JhsrYbbYMCLHqNdgUkkR1I/ZYkuvJy/NY9LIyKJEVErR6w1oUCIt5SgU8rR1d6Mx2hDFwt60
      ALkFD/m3/6ZM9sDll/nvb1fIH/WHHyX+fHmJpcz6Qvp6lZq/X1fPn/7pf+H4qZeQFrLYnS6U
      CjnXbtxAL5MQlmh46+VzyIW9a11TqdTD3Rl3e/5ebaa+l7p2y96MAdLpiin+Umr9h95KXmWd
      06fOcuPWT6mp7+ZvPvgxZ8+cISmR0lFbQ94fZMYbpbNh6w3Dd8peVLgH3RZfeoWsmNnx+Xa1
      E5WgLtN1UDzRAJY9c2SKMvKJEDqDkUAovO8bJ7+oOB7ZnO7BZ6lUylvf/EWCa8v8xj/9Lebm
      5jnR3EA4GOFE/ykE2e4G3LuiVGBqYhqrw4HXu0pDfS0rgQh1NTby+TwWi6Xs8E+977OUnN/x
      Zb7X8us06PZvzcNOeKIBaDRq4pEYWmMNMe8MjSdPVmycXCxW9qKKxc2b2WJRpFB49tuDHgZe
      NZW/yQuFAk0tbQBYzeuO1b6+XgAMOmPZcbthxz52iQy1Ssri3CKtxxsZvLVMq0uPx+tBITdg
      MpkoFosPy7Pb3rN4X4coHnxdeOITiscT6LQmCskwzo5eVidnaelsRyuIZAol1HIBUVrZCkil
      my/ylEqFFyqacCf80R/9EXNzcwA0Nzfz/e9//4BLtIFClmS2hMmsY2pknvo6G6vRBHXOGjKZ
      DBKpFKlU+vD32+3evMJ9HYJw8HXhiVd3N7fe/7TudrKY9nIK6GgxNzfH8PBwmeynl3/K3XtD
      DJw8QV2NE43ewOpaEL93muOnX8VuMT27AsqUdHSsr0ZrvC9q3Dq/wAvB0XwVHyJycR9Oh5NI
      RmTi4k+w2+1E0iIdrXXYzNWXzX6zJwaQMUiYP1fe5WkxSFDFqvMDj9Lc3Fzx+dTp19AaDcTi
      WZJuFxKZnHgyQ43FQDAS21cjiKwsMeldpLa+h4Yaw75d5zCzNwaglzB/rlyVq2oAFWzW57fa
      awBQWdVgfYbdHUAmkwJSSo84MbxLC1gcdQR8q7icdlb8UWwWI8Vi8bnex3gr9rULFKmX8uW/
      LJ+1e6leyvb3DK+yn6QiQeaX5pAq63HXGoECSoWa2ZF7WBocXL09TZ1VzWzMj1xhoKWxbt+8
      QFf/+JNd6Tr/j7++q/MeUB0DHFmKyAwW1BItbcfux9UUC4yOTdLS6MK7tIZeq8cfieOstZFK
      pPbVCxScW9uVrqf1Ih2IARQmp0n9x98vk2n+599G1t66xRlV9p4i81PjTE6M037qFYz1ZpCq
      ePX1VwA4KsEqGwwgyV//8ENq245xYWB9KZ7XM0dRrqWQDGOwOVldWsRe50YtKSDXm/d0JriU
      Sj9MG/IAob4OiebF63sePDIa6tx09Cco5XcfG/S8s8EANNhcNmqtX3keTGYzkVQKQWlkdWKY
      2vszwWqDjr5u8/pMcKkytV1xi4CroihSLG5yfFGk6PGQ+X/+U5lc9T/9BsCmcmnrsW3d5FHl
      8d0DkYxMjVEiw3II0q0cFBueUIabV2+CTEVTUxOwHpttsLtIRlcwuOrxjE5iq6vHqPhqJlgq
      qYxWlApbzAQLAtIdzhxvJZdGY+SvXi+Ty8+fRWq1bHpOlUcpMHLjS5p6+wgEEjiM6zFH4XAY
      s9nE0tLy0fMCjQwO0dXbgd35VeqI7r4T6x+c6wOl+oZGnpaCEiJ15UagUIJshztrFoMhsn/7
      YZlMaGutGsC2UPLtX/jeBlmRQCCENJtAppI8Uy/Qbtl4/rhvhH/z8f+x7fPLDKDnRA8Ts5eQ
      7SLEdSck7FIGf7F8gcRLdimqWGlPJtSKwVC1ZdgVRUL+NVSyGvzRyDP1Au2Wjedv1WPY8vxH
      /ygW1ZzsdlFU72z2MS/REZSeLJehQ05iR3rWZ5S3P6G21TyDaanaMuwOGedeegl4NEvRi01Z
      bbtx4zoh3yo6W45j9dtfrpdHT0h6qkxWkOigxB4aRmXLsFPEpeXqCrUqZZQZQIPTxrGOXkr5
      3W1zv5GCRLepYchLe9My7JRSauuVa1WOJmW1ytX4YCLqYNxiefamK7V11+jgdiKpcjg5VKEQ
      e9Vi7JTNJuCqs9JHgycagG9hDKm9k8DsvT1bE1xEQUrirJDtN1u3DMsVoRmG3/8PFCanEaem
      y+TK73x738v5vPCG62d2vSh+Iz//e7+2F0Wi29nLn/7aO9s+/okG4LAY8Yr5x64JTgeDzH9Q
      7nVJ/uzPIWbSDP5B+Qzut3/zN9C66lgWvlMmTxVNQGUXRRSLFEuVs8pFUUSUVBpSvig83Iht
      4/GbsdXMdKFQID8xSf6Dn5TJhW+9tamew8h+Lzc8EovivcE4KUFAlo1uuSY4F4mw8OFHZefl
      X3sdgOhM+aCzmM0hbJLnZjPZA3mWOqZk/6RMflK27rnZaEgFwQ6lRMVYQhSMm44lpIJAqkbK
      vV+Ql8lfk8kQN8l2J5PJyF29XjHPoP1f/sWm5X8eEbMppmbnsdkdBCLxLbNCvAg80QBcTQ92
      LFxfuLGfa4Ij0zP89F/9qzLZN3/v9zDtMOZnp2OJglJCpL6yss+fkzHRWt5l+jkgnQ8TTc2W
      ybXwwnSZpAo1ZqMGXzCOVS0c7awQ+0Fi2cvg7/+gTPZ3fvu3D6Iou2K1S2DCUT5mcQPi1HTF
      BNzzaADZmI+lQAqHScdqLHW0s0LsB4V0uqJrVEhv7Y8vpNNEpsvfrAWzBdkWwVlbGZjMZdgT
      N+tWrHYJLKg2dKX2RPOzRWWsYeD4eov/os8IHyo36FYklr3c/f0/KJf9Xv2WXaOtDCwRVnP7
      I3+Z/JW/m8dorhxMA6QkzgqDgfXQj82Ozxg270oVgyGKwVCZ7DC4WT/70V+S0GlpbTlLZ/PR
      XKj6XBjAVuy0K5UJhSoG65nXXkemdjEyt2F39nZIS2oJSSszEcckbSwL1kq5tI0lodKdGx+9
      QfTz8q6R+3/991uW81nhamrCE05iMb94Yc7bZUcGIGbjDI1NH5rcoDvtSm3FZi0M3/oZItMz
      zN8o9/bw221byuOhHCszyXJ5Kyx2GxmuKd8R3s1BtwwZrl26gbm3C45w8o4dGUAqFKGxu+Ph
      PIDd+WIHkUVnZipaDH77X2wpX7txk7t/9mfl8m/9DL6wddMWZjF6i4XF8nmG19r/7TMyDBV/
      93vf5erINOwwhPhFYkcGoK9xMjY68XAeIJ0vopZXd4Z5ElsZxkjAyPvj5S3Da1+H2dgE00tX
      y+Tfbv8dvEvjeJcmyuSnz//8rstVyOVAKhKLpR+uCDtq7GwMIJXT1dv78M9SqYQoithsNr73
      vfLVRTabjVKp9NzKC4UC3d3d+yqvUyo5ZzRVyJMxDQGvvULuD2YZn46XyU+cLlAKhSmFylsM
      aeuxJ7oYBYWKzp4z1Fk3n9sJ+VbwrEWor7WTzWapq3vxWvx93SPsUMgLWVKigEYp25GejbIH
      W3oeinvaQp5KpYhEorhctdvYt63EpQ/exp/T8OYbr2PeZCf6xcVFFKUSgXQcuUxPa3M98Xgc
      uVyOIAisJJbIihkEmQzx/oTWdj7X6uqRISeVSqHX6xFFkdt/+vljyro1p/7hq+v6BQFRFFmK
      evjze/9t2+fviRfowYNeXlwkGljE1DyAy6R8snx+hsX5KZx9b9Bk3cbxO5TvtJzw1bY9G3Uk
      EglMJlOFfLPjR+7eRmutpam+tky+6JlhZnaNr33tpa/kYp4r12+i1Og41d+3Lf2b6gHWvLOs
      hIq4XLVPqPwAUeaXs+QJkxc3DxO3GnV4fFHcLje5XO7hRNiDXWaalE+XlUMURZT3NwrZbWKs
      jTveKDJb7x+2GXvqBtWpBFZyYJeXq5VLS9ga2jDoyl2EZpOBkZyMJkkGUO5az1bHr8xPEcpJ
      OdbctC09sPlmFH6/v0JGqURhi6l8o1pgMRinqb62TF5MRlGZN6y0E+TYbTZaWtsqL1EUyeUL
      PPoTZ1IJ4tE4Jkflir1UMofLVVsh3xwTv/ZP/sFjj9AYzHQa9m57pmdBk6WZ//1b/3rbx+/p
      CDYnlshlUrAhT5BWq8bnC1HaEHUZCkVoddsZmfJsS4/eoCUUilXItzreaLaikJYoUu6q3UrP
      /NQ4t8ZHK29MzBNPbnCvlgosLswxs7BccbhaZ0CxyZOVClKisViF3GYxcP3mnQr5xPg48wsL
      ZTKVRkeNzYxGW7loyemwkju6Oa52xZ4aQCGfx93Wg0FZ7lYTi0Vi4QC5QnmFs9jthOMZzp7o
      fuTgPJl8kYaWDvTK8uKFghEi3ilWY+Vv3a2um0ql1scA2fJasZUeh9OJTV25Q7vP76/IiZPJ
      ZFheWcNqrszoHEvnUUg3dCvEPEqTi+6W8oFkxO9leGIOlbrSC6PXKMlmc0TjqfL7ioeZ83gr
      jt9KXmVr9tQAdBo1yVSK0oaZlVAwiiQXIZYrl8eiCVSCSCLzSAUV5CilJTLJKMncI5WomEcs
      QU6qxW4oj7fRadRk8/mK62YLJfLpaIXhaTQqMmiw68u7TNFInKKksktjMeqYmJ4rk6k0ek6d
      OoVssydYyLG4tFhWcTPZLNls5Vprk93Fy+fPbLoTTCyZRiaTYdSX93MLggaXpdJQ81INx9vd
      FfIqW7OnBhCNRJHmEwQS5ZXIbDFR13YCh7a8wpUKadDVYNY88uYW80TjKQS5AuHRaEOpHCkl
      6h0Gwsly/UWpDMUm2eYMWhUSpR6dutxgZHIldXW1FdGMYj5NMlOpJx7xEYlXVt417yzzS5Xj
      g3w2Tq6kKqu4Ko2OQi5NJBKpOF4iFajb0HfPpBJo9UYsFusGeZxsvohCsckKukKW1UCl/ipb
      s6cG4HK7kWusuEyPjMTFPB7PEnlRrHhDb9pHF+SolXKmRwaJpvNlx+v0emQ6K/YNhhQN+BCl
      MiQb+vqJVBpJIUNig55kIoFQyjK/XF55LQ4njQ2uMhliHpPzGCd7jlXItQYHDXWOMnE2GQW1
      nW9//WU2olTIKYqFii7NZqg0OqSZMKuR1Aa5Hmnax83RuYpzCqkQ04u786YcVfbUC7Q0Pwca
      E/lCEeWDGeJCAq2jmXpNCl+iQL35q7f9o310zYPjc0kUBjv9517FZCrvF+cyafKitNyQxDyp
      fAl5OkYqZ/vquoBCLkcUSxW5SGUyGWJRgsNmKdMTCAaJxtLU1XxVqR90XaTS8lYEQY5/bQWL
      o9xglpZX0Al5hqaXONNV3h2Jxde7hxu7NFuh1hlQZPMV8obO0xRU5Y4DSiXU9mYGTM/nKHiv
      1gTvlL0zgEKG2cVlzA4JTscjb0WlCSE3y2JGSmNLuY82I0KD00rkUT90NsroTAi3TYPBXIRH
      kuwqtXqyiQ1vT0GO3WIgFI1VrCguiSLpbA6hzCdeQqFQUERApRDK9GgUcoKS8kXeKo2OwoqX
      RCZJQ115CLRKqSSfL++OHWvvBGBDO7JefqGE1x8lGk9tywgElR6hVP5Gz6aTRCIxKrZmLhXI
      ZLLojY93W6ZSKcQt1kdvh1Tqya3XQejaLXtnAJkoGnsz2VRwQ1dEQmPzZhMmRWKRMKveLP1n
      HqlYWjsXTjrL3uTr+kOMjk0jJQdaOw2WRyqvRMDnXcLoKvelS6RgNFuQSh6pLdkIS2GRBqOc
      cDKPTvGVUWo0GpSJyjeuUiEnlkxWVFytRs1OciKYrHaUoe1VfoBYOIhpwxhAqdZSq9ZSW7vB
      3y+Vk8+EuTG1xM/+nTe21Llx4mg36PX6p9axH7p2w94ZgK6Gs301wDZnB7NRgsEwDXUOlkNZ
      mqz3K6JUjnKzkYlUiaNmfdHGRveoTK7E1dCAYkNodiYrUu+0EMoV1xftAijN1BhXiYsGGszl
      LVIoECAcSQDlGQu26rooVSrGx2YqJrw2Ixb0U/r/2zu3p6aBKA5/uTTb0jstTVuKHUVRRPEf
      UP99xwdmGHRQhhkEKg0p0JJe0kuaxAdqh9pqO4ADjv1ed3M2D/vbs9lzTlaSSWX0qX2HzzRt
      YmL22xujQqCOHw79NcqlQxpdKBauFrBW3QJFwfFkFNfmuHzB+svnyEC7aeHLATw5QDoxPumP
      DvZxlRB5PQ30sawOquSAFqHbMKlcurx4VgQ86lYTRfbQwkmiC+OR30/bW2Ryj0gkovRc6NsW
      l80O8UiUysUpiXiKZDJOz5XusSBGJHn7/h34PkwN2wNamNXVCeLqtdjZ/YIIhsgVRwWQy+ts
      7+yyvjkaNU0tjVdzgY8aDBINj6dGZfUlvu5/G/EAtm3TbrdHrj79E47To3TRIBmZrfjENM2R
      39TPQjiZoeA0pne8Q2RZwjCMwVbQRwiBoih0+n30pUXMa22teo1gLD1RAFe2ZIxyGce1wM+i
      iR5qz6LvuqQSyUFbG/wwtfMS6eXHRIuFibY6NROjXeO0LvOmEEQKqBwcnrGYjbHg2RiGRaWp
      3G9FmCRJcMPC6iGKykqhAL6Le31j7Nh8+LiFI4cIBWbId2+ZnJ03OKk22LwWl7s8K/N5/5hI
      LD7iAYyTEhc1i5XibAJIZZdJTdLdb3CdLtXLOsgquj7da+zt7SFJEq83O37v4AAAALlJREFU
      1mYf5JakMjnyQlA9O8VTF0ZWY9/3qVWrhIIB/EGb00kz4TQZgOzyI4QQVIwTtMgqIW0BcAe2
      0lSrVYQq0CIZQpognRAgJgtpbf0VWkDm+Og7G0/zhDTIRWVSsSQB1aNhd5G6ddaf5O8mG/Re
      8RwM8xyAxbQ+9u1wbhpEFjMEp4ngpx1ZJaePegzfcymfVsbO6h8S3XZrKJhf3/9Ox+l2hwls
      D8nWTfn3BTBnzi2Yl3PN+a/5AXKK6VcSt10/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='What is top selling Sub-Category in each state' width='192'>
      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
      XKD/AJAjZCh1je9KAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
